// 4.13.0 dither_algorithm=2 alpha_dither=yes layout_rotation=0 opaque_image_format=RGB888 non_opaque_image_format=ARGB8888 section=ExtFlashSection extra_section=ExtFlashSection generate_png=no 0xbc212f2c
// Generated by imageconverter. Please, do not edit!

#include <BitmapDatabase.hpp>
#include <touchgfx/Bitmap.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <platform/driver/lcd/LCD24bpp.hpp>

extern const unsigned char _background[]; // BITMAP_BACKGROUND_ID = 0, Size: 480x272 pixels
extern const unsigned char _blue_buttons_round_edge_small[]; // BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_ID = 1, Size: 170x60 pixels
extern const unsigned char _blue_buttons_round_edge_small_pressed[]; // BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_PRESSED_ID = 2, Size: 170x60 pixels
extern const unsigned char _button_down_disabled[]; // BITMAP_BUTTON_DOWN_DISABLED_ID = 3, Size: 130x56 pixels
extern const unsigned char _button_down_pressed[]; // BITMAP_BUTTON_DOWN_PRESSED_ID = 4, Size: 130x56 pixels
extern const unsigned char _button_down_released[]; // BITMAP_BUTTON_DOWN_RELEASED_ID = 5, Size: 130x56 pixels
extern const unsigned char _button_up_pressed[]; // BITMAP_BUTTON_UP_PRESSED_ID = 6, Size: 130x56 pixels
extern const unsigned char _button_up_released[]; // BITMAP_BUTTON_UP_RELEASED_ID = 7, Size: 130x56 pixels
extern const unsigned char _counter_box[]; // BITMAP_COUNTER_BOX_ID = 8, Size: 152x154 pixels

const touchgfx::Bitmap::BitmapData bitmap_database[] =
{
    { _background, 0, 480, 272, 0, 0, 480, (uint8_t)(touchgfx::Bitmap::RGB888) >> 3, 272, (uint8_t)(touchgfx::Bitmap::RGB888) & 0x7 },
    { _blue_buttons_round_edge_small, 0, 170, 60, 11, 4, 148, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 50, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { _blue_buttons_round_edge_small_pressed, 0, 170, 60, 11, 4, 148, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 50, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { _button_down_disabled, 0, 130, 56, 3, 0, 124, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 55, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { _button_down_pressed, 0, 130, 56, 3, 0, 124, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 55, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { _button_down_released, 0, 130, 56, 3, 0, 124, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 55, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { _button_up_pressed, 0, 130, 56, 3, 0, 124, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 55, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { _button_up_released, 0, 130, 56, 3, 0, 124, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 55, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { _counter_box, 0, 152, 154, 0, 0, 152, (uint8_t)(touchgfx::Bitmap::RGB888) >> 3, 154, (uint8_t)(touchgfx::Bitmap::RGB888) & 0x7 }
};

namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
}
