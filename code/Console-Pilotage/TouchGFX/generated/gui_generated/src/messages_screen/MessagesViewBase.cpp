/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/messages_screen/MessagesViewBase.hpp>
#include "BitmapDatabase.hpp"
#include <texts/TextKeysAndLanguages.hpp>
#include <touchgfx/Color.hpp>

MessagesViewBase::MessagesViewBase() :
    buttonCallback(this, &MessagesViewBase::buttonCallbackHandler)
{

    imageBg.setXY(0, 0);
    imageBg.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_ID));

    buttonRotation.setXY(0, 0);
    buttonRotation.setBitmaps(touchgfx::Bitmap(BITMAP_SIDE_BUTTON_RELEASED_ID), touchgfx::Bitmap(BITMAP_SIDE_BUTTON_PRESSED_ID), touchgfx::Bitmap(BITMAP_SAILBOAT_ORANGE_ID), touchgfx::Bitmap(BITMAP_SAILBOAT_ORANGE_LIGHT_ID));
    buttonRotation.setIconXY(9, 52);
    buttonRotation.setAction(buttonCallback);

    imageMessages.setXY(0, 136);
    imageMessages.setBitmap(touchgfx::Bitmap(BITMAP_SIDE_BUTTON_IDLE_ID));

    imageMessagesIcon.setXY(9, 188);
    imageMessagesIcon.setBitmap(touchgfx::Bitmap(BITMAP_MESSAGES_ORANGE_LIGHT_ID));

    imageMessageBoxBg.setXY(81, 14);
    imageMessageBoxBg.setBitmap(touchgfx::Bitmap(BITMAP_COUNTER_BOX_MESSAGES_ID));

    textMessages.setPosition(81, 14, 360, 200);
    textMessages.setColor(touchgfx::Color::getColorFrom24BitRGB(249, 186, 109));
    textMessages.setLinespacing(0);
    textMessagesBuffer[0] = 0;
    textMessages.setWildcard(textMessagesBuffer);
    textMessages.setTypedText(touchgfx::TypedText(T_SINGLEUSEID7));

    buttonWipe.setXY(196, 214);
    buttonWipe.setBitmaps(touchgfx::Bitmap(BITMAP_BUTTON_EMPTY_RELEASED_ID), touchgfx::Bitmap(BITMAP_BUTTON_EMPTY_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICONS8_BROOM_ORANGE_ID), touchgfx::Bitmap(BITMAP_ICONS8_BROOM_ORANGE_LIGHT_ID));
    buttonWipe.setIconXY(49, 12);
    buttonWipe.setAction(buttonCallback);

    add(imageBg);
    add(buttonRotation);
    add(imageMessages);
    add(imageMessagesIcon);
    add(imageMessageBoxBg);
    add(textMessages);
    add(buttonWipe);
}

void MessagesViewBase::setupScreen()
{

}

void MessagesViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonRotation)
    {
        //InteractionButtonMessagesClicked
        //When buttonRotation clicked call virtual function
        //Call ButtonMessagesClicked
        ButtonMessagesClicked();

        //InteractionChangeScreenRotation
        //When InteractionButtonMessagesClicked completed change screen to RotationVoilier
        //Go to RotationVoilier with no screen transition
        application().gotoRotationVoilierScreenNoTransition();
    }
    else if (&src == &buttonWipe)
    {
        //InteractionButtonWipeClicked
        //When buttonWipe clicked call virtual function
        //Call buttonWipeClicked
        buttonWipeClicked();
    }
}
