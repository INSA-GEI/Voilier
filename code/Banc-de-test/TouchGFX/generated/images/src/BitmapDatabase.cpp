// 4.13.0 dither_algorithm=2 alpha_dither=yes layout_rotation=0 opaque_image_format=RGB888 non_opaque_image_format=ARGB8888 section=ExtFlashSection extra_section=ExtFlashSection generate_png=no 0xb2c1be83
// Generated by imageconverter. Please, do not edit!

#include <BitmapDatabase.hpp>
#include <touchgfx/Bitmap.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <platform/driver/lcd/LCD24bpp.hpp>

extern const unsigned char _background[]; // BITMAP_BACKGROUND_ID = 0, Size: 480x272 pixels
extern const unsigned char _blue_slider_horizontal_medium_indicators_slider2_round_nob[]; // BITMAP_BLUE_SLIDER_HORIZONTAL_MEDIUM_INDICATORS_SLIDER2_ROUND_NOB_ID = 1, Size: 54x34 pixels
extern const unsigned char _blue_slider_horizontal_medium_slider2_round_back[]; // BITMAP_BLUE_SLIDER_HORIZONTAL_MEDIUM_SLIDER2_ROUND_BACK_ID = 2, Size: 332x20 pixels
extern const unsigned char _blue_slider_horizontal_medium_slider2_round_fill[]; // BITMAP_BLUE_SLIDER_HORIZONTAL_MEDIUM_SLIDER2_ROUND_FILL_ID = 3, Size: 332x20 pixels
extern const unsigned char _blue_slider_horizontal_small_indicators_slider_horizontal_small_square_knob[]; // BITMAP_BLUE_SLIDER_HORIZONTAL_SMALL_INDICATORS_SLIDER_HORIZONTAL_SMALL_SQUARE_KNOB_ID = 4, Size: 54x34 pixels
extern const unsigned char _blue_slider_horizontal_small_slider_horizontal_small_back[]; // BITMAP_BLUE_SLIDER_HORIZONTAL_SMALL_SLIDER_HORIZONTAL_SMALL_BACK_ID = 5, Size: 172x20 pixels
extern const unsigned char _blue_slider_horizontal_small_slider_horizontal_small_fill[]; // BITMAP_BLUE_SLIDER_HORIZONTAL_SMALL_SLIDER_HORIZONTAL_SMALL_FILL_ID = 6, Size: 172x20 pixels
extern const unsigned char _blue_slider_vertical_small_indicators_slider3_vertical_round_nob[]; // BITMAP_BLUE_SLIDER_VERTICAL_SMALL_INDICATORS_SLIDER3_VERTICAL_ROUND_NOB_ID = 7, Size: 34x54 pixels
extern const unsigned char _blue_slider_vertical_small_slider3_vertical_round_back[]; // BITMAP_BLUE_SLIDER_VERTICAL_SMALL_SLIDER3_VERTICAL_ROUND_BACK_ID = 8, Size: 20x172 pixels
extern const unsigned char _blue_slider_vertical_small_slider3_vertical_round_fill[]; // BITMAP_BLUE_SLIDER_VERTICAL_SMALL_SLIDER3_VERTICAL_ROUND_FILL_ID = 9, Size: 20x172 pixels
extern const unsigned char _button_empty_pressed[]; // BITMAP_BUTTON_EMPTY_PRESSED_ID = 10, Size: 130x56 pixels
extern const unsigned char _button_empty_released[]; // BITMAP_BUTTON_EMPTY_RELEASED_ID = 11, Size: 130x56 pixels
extern const unsigned char _communication_48[]; // BITMAP_COMMUNICATION_48_ID = 12, Size: 48x48 pixels
extern const unsigned char _counter_box[]; // BITMAP_COUNTER_BOX_ID = 13, Size: 152x154 pixels
extern const unsigned char _counter_box_120x122[]; // BITMAP_COUNTER_BOX_120X122_ID = 14, Size: 120x122 pixels
extern const unsigned char _counter_box_messages[]; // BITMAP_COUNTER_BOX_MESSAGES_ID = 15, Size: 360x200 pixels
extern const unsigned char _giroutte_48[]; // BITMAP_GIROUTTE_48_ID = 16, Size: 48x48 pixels
extern const unsigned char _green_polygons_background_480x272[]; // BITMAP_GREEN_POLYGONS_BACKGROUND_480X272_ID = 17, Size: 480x272 pixels
extern const unsigned char _i2c_spi_48[]; // BITMAP_I2C_SPI_48_ID = 18, Size: 48x48 pixels
extern const unsigned char _icons8_broom_orange[]; // BITMAP_ICONS8_BROOM_ORANGE_ID = 19, Size: 32x32 pixels
extern const unsigned char _icons8_broom_orange_light[]; // BITMAP_ICONS8_BROOM_ORANGE_LIGHT_ID = 20, Size: 32x32 pixels
extern const unsigned char _icons8_cancel_60[]; // BITMAP_ICONS8_CANCEL_60_ID = 21, Size: 32x32 pixels
extern const unsigned char _icons8_compass_48[]; // BITMAP_ICONS8_COMPASS_48_ID = 22, Size: 48x48 pixels
extern const unsigned char _icons8_go_back_60[]; // BITMAP_ICONS8_GO_BACK_60_ID = 23, Size: 32x32 pixels
extern const unsigned char _icons8_ok_60[]; // BITMAP_ICONS8_OK_60_ID = 24, Size: 32x32 pixels
extern const unsigned char _icons8_sample_rate_48[]; // BITMAP_ICONS8_SAMPLE_RATE_48_ID = 25, Size: 48x48 pixels
extern const unsigned char _icons8_test_passed_48[]; // BITMAP_ICONS8_TEST_PASSED_48_ID = 26, Size: 48x48 pixels
extern const unsigned char _icons8_up_2_52[]; // BITMAP_ICONS8_UP_2_52_ID = 27, Size: 32x32 pixels
extern const unsigned char _icons8_up_3_52[]; // BITMAP_ICONS8_UP_3_52_ID = 28, Size: 32x32 pixels
extern const unsigned char _icons8_wind_48[]; // BITMAP_ICONS8_WIND_48_ID = 29, Size: 48x48 pixels
extern const unsigned char _sailboat_2_large[]; // BITMAP_SAILBOAT_2_LARGE_ID = 30, Size: 100x100 pixels
extern const unsigned char _slider_knob[]; // BITMAP_SLIDER_KNOB_ID = 31, Size: 32x32 pixels
extern const unsigned char _slider_round_back[]; // BITMAP_SLIDER_ROUND_BACK_ID = 32, Size: 350x12 pixels
extern const unsigned char _wheel_selector_background_380_green[]; // BITMAP_WHEEL_SELECTOR_BACKGROUND_380_GREEN_ID = 33, Size: 380x100 pixels
extern const unsigned char _wheel_selector_overlay_380_green[]; // BITMAP_WHEEL_SELECTOR_OVERLAY_380_GREEN_ID = 34, Size: 120x120 pixels

const touchgfx::Bitmap::BitmapData bitmap_database[] =
{
    { _background, 0, 480, 272, 0, 0, 480, (uint8_t)(touchgfx::Bitmap::RGB888) >> 3, 272, (uint8_t)(touchgfx::Bitmap::RGB888) & 0x7 },
    { _blue_slider_horizontal_medium_indicators_slider2_round_nob, 0, 54, 34, 8, 4, 38, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 24, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { _blue_slider_horizontal_medium_slider2_round_back, 0, 332, 20, 10, 0, 312, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 20, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { _blue_slider_horizontal_medium_slider2_round_fill, 0, 332, 20, 10, 0, 312, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 20, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { _blue_slider_horizontal_small_indicators_slider_horizontal_small_square_knob, 0, 54, 34, 2, 1, 50, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 30, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { _blue_slider_horizontal_small_slider_horizontal_small_back, 0, 172, 20, 0, 0, 172, (uint8_t)(touchgfx::Bitmap::RGB888) >> 3, 20, (uint8_t)(touchgfx::Bitmap::RGB888) & 0x7 },
    { _blue_slider_horizontal_small_slider_horizontal_small_fill, 0, 172, 20, 0, 0, 172, (uint8_t)(touchgfx::Bitmap::RGB888) >> 3, 20, (uint8_t)(touchgfx::Bitmap::RGB888) & 0x7 },
    { _blue_slider_vertical_small_indicators_slider3_vertical_round_nob, 0, 34, 54, 5, 7, 24, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 38, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { _blue_slider_vertical_small_slider3_vertical_round_back, 0, 20, 172, 0, 10, 20, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 152, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { _blue_slider_vertical_small_slider3_vertical_round_fill, 0, 20, 172, 0, 10, 20, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 152, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { _button_empty_pressed, 0, 130, 56, 3, 0, 124, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 55, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { _button_empty_released, 0, 130, 56, 3, 0, 124, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 55, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { _communication_48, 0, 48, 48, 23, 42, 23, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 4, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { _counter_box, 0, 152, 154, 0, 0, 152, (uint8_t)(touchgfx::Bitmap::RGB888) >> 3, 154, (uint8_t)(touchgfx::Bitmap::RGB888) & 0x7 },
    { _counter_box_120x122, 0, 120, 122, 0, 0, 120, (uint8_t)(touchgfx::Bitmap::RGB888) >> 3, 122, (uint8_t)(touchgfx::Bitmap::RGB888) & 0x7 },
    { _counter_box_messages, 0, 360, 200, 0, 0, 0, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 0, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { _giroutte_48, 0, 48, 48, 26, 17, 18, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 3, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { _green_polygons_background_480x272, 0, 480, 272, 0, 0, 480, (uint8_t)(touchgfx::Bitmap::RGB888) >> 3, 272, (uint8_t)(touchgfx::Bitmap::RGB888) & 0x7 },
    { _i2c_spi_48, 0, 48, 48, 29, 20, 3, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 6, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { _icons8_broom_orange, 0, 32, 32, 5, 13, 4, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 3, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { _icons8_broom_orange_light, 0, 32, 32, 5, 13, 4, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 3, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { _icons8_cancel_60, 0, 32, 32, 5, 10, 5, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 12, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { _icons8_compass_48, 0, 48, 48, 39, 19, 2, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 10, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { _icons8_go_back_60, 0, 32, 32, 16, 7, 9, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 7, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { _icons8_ok_60, 0, 32, 32, 7, 7, 10, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 9, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { _icons8_sample_rate_48, 0, 48, 48, 13, 8, 3, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 17, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { _icons8_test_passed_48, 0, 48, 48, 37, 10, 3, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 28, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { _icons8_up_2_52, 0, 32, 32, 17, 6, 10, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 5, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { _icons8_up_3_52, 0, 32, 32, 5, 6, 10, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 5, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { _icons8_wind_48, 0, 48, 48, 7, 29, 22, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 3, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { _sailboat_2_large, 0, 100, 100, 48, 3, 5, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 75, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { _slider_knob, 0, 32, 32, 2, 0, 28, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 32, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { _slider_round_back, 0, 350, 12, 7, 1, 336, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 9, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { _wheel_selector_background_380_green, 0, 380, 100, 249, 0, 131, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 100, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { _wheel_selector_overlay_380_green, 0, 120, 120, 0, 0, 120, (uint8_t)(touchgfx::Bitmap::RGB888) >> 3, 120, (uint8_t)(touchgfx::Bitmap::RGB888) & 0x7 }
};

namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
}
